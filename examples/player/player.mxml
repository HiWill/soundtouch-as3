<?xml version="1.0" encoding="utf-8"?>

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml">
  <mx:Panel title="TD Stretch Demo" width="100%" paddingTop="10" paddingRight="10" paddingBottom="10" paddingLeft="10">
    <mx:HBox paddingBottom="10">
      <mx:Button id="browseButton" label="Choose a songâ€¦" click="chooseFile();"/>
    </mx:HBox>
    <mx:CheckBox id="quickSeekCheckbox" label="Quick Seek" change="updateQuickSeek();"/>
    <mx:VBox width="100%">
      <mx:Label text="Tempo Adjustment"/>
      <mx:HSlider id="tempoSlider" minimum="0" maximum="2" value="1" snapInterval="0.01" liveDragging="false" change="updateTempo();" width="100%"/>
    </mx:VBox>
    <mx:Button id="playButton" label="Play" enabled="false" click="togglePlayPause();"/>
  </mx:Panel>

  <mx:Script><![CDATA[
    import com.ryanberdeen.soundtouch.Stretch;
    import com.ryanberdeen.soundtouch.FifoSampleBuffer;

    import flash.events.Event;
    import flash.media.Sound;
    import flash.net.FileReference;

    import org.audiofx.mp3.MP3FileReferenceLoader;
    import org.audiofx.mp3.MP3SoundEvent;

    private var fileReference:FileReference;
    private var mp3Loader:MP3FileReferenceLoader;
    private var sound:Sound;

    private var outputSound:Sound;
    private var soundChannel:SoundChannel;
    private var stretch:Stretch;

    private var playing:Boolean;

    private function chooseFile():void {
      fileReference = new FileReference();
      fileReference.addEventListener(Event.SELECT, handleFileSelected);
      fileReference.browse([new FileFilter("MP3 Files", "*.mp3")]);
    }

    private function handleFileSelected(e:Event):void {
      resetPlayer();
      mp3Loader = new MP3FileReferenceLoader();
      mp3Loader.addEventListener(Event.COMPLETE, handleSoundLoadComplete);
      mp3Loader.getSound(fileReference);
    }

    private function handleSoundLoadComplete(e:MP3SoundEvent):void {
      mp3Loader.removeEventListener(Event.COMPLETE, handleSoundLoadComplete);
      sound = e.sound;

      preparePlayer();
    }

    private function preparePlayer():void {
      resetPlayer();

      outputSound = new Sound();
      stretch = new Stretch();
      var inputBuffer:FifoSampleBuffer = new FifoSampleBuffer();
      var outputBuffer:FifoSampleBuffer = new FifoSampleBuffer();
      stretch.inputBuffer = inputBuffer;
      stretch.outputBuffer = outputBuffer;
      stretch.tempo = tempoSlider.value;
      stretch.quickSeek = quickSeekCheckbox.selected;

      var sourcePosition:uint = 0;

      outputSound.addEventListener(SampleDataEvent.SAMPLE_DATA, function(e:SampleDataEvent):void {
        while (outputBuffer.frameCount < 4096) {
          var bytes:ByteArray = new ByteArray();
          var numFrames:uint = stretch.inputChunkSize - inputBuffer.frameCount;
          var numFramesExtracted:uint = sound.extract(bytes, numFrames, sourcePosition);
          if (numFramesExtracted < numFrames) {
            return;
            // TODO flush stretch
          }
          sourcePosition += numFramesExtracted;
          inputBuffer.putBytes(bytes);
          stretch.process();
        }
        outputBuffer.receiveBytes(e.data, 4096);
      });

      playButton.enabled = true;
      playButton.label = "Play";
      playing = false;
    }

    private function resetPlayer():void {
      if (playing) {
        pause();
      }
      soundChannel = null;
    }

    private function soundCompleteHandler(e:Event):void {
      preparePlayer();
    }

    private function togglePlayPause():void {
      if (!playing) {
        play();
      }
      else {
        pause();
      }
    }

    private function play():void {
      soundChannel = outputSound.play();
      soundChannel.addEventListener(Event.SOUND_COMPLETE, soundCompleteHandler);
      playing = true;

      playButton.label = "Pause";
      playing = true;
    }

    private function pause():void {
      if (playing) {
        soundChannel.removeEventListener(Event.SOUND_COMPLETE, soundCompleteHandler);
        soundChannel.stop();
        playing = false;
      }

      playButton.label = "Play";
      playing = false;
    }

    private function updateTempo():void {
      if (stretch) {
        stretch.tempo = tempoSlider.value;
      }
    }

    private function updateQuickSeek():void {
      if (stretch) {
        stretch.quickSeek = quickSeekCheckbox.selected;
      }
    }
  ]]></mx:Script>
</mx:Application>
